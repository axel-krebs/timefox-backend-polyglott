buildscript {
	ext {
		vertxVersion = '4.2.7'
		slf4jVersion = '1.7.36'
		junitVersion = '5.8.1'
		mockitoVersion = '4.5.1'
	}
	repositories {
        mavenCentral()
        maven { 
			url "https://plugins.gradle.org/m2/" 
		}
		gradlePluginPortal()
    }
    dependencies {
		classpath "com.palantir.gradle.docker:gradle-docker:0.33.0"
	}
}

apply plugin: 'tecfox.java-conventions'
//apply plugin: 'com.palantir.docker'

dependencies {

	//api("io.vertx:vertx-stack-depchain:$vertxVersion"){
	//	exclude group: "org.slf4j", module: "slf4j-api"
	//}
	implementation "io.vertx:vertx-core:$vertxVersion"
	implementation "io.vertx:vertx-web:$vertxVersion"
	implementation "io.vertx:vertx-web-openapi:$vertxVersion"
	
	implementation("org.slf4j:slf4j-api:$slf4jVersion")
	
	testImplementation("io.vertx:vertx-junit5:$vertxVersion")
  	testImplementation("io.vertx:vertx-web-client:$vertxVersion")
  	
    // Use JUnit Jupiter for testing.
    testImplementation("org.junit.jupiter:junit-jupiter:$junitVersion")
	testImplementation "org.mockito:mockito-core:$mockitoVersion"
}

// using deprecated flags here..
java {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}

//docker {
//    name "tecfox.eu/timefox:${project.version}"
//   files file("build/distributions/timefox-backend-polyglott-${project.version}.tar.gz"), 'install.sh'
//    buildArgs([ZIP_FILE_NAME: "timefox-backend-polyglott-${project.version}.tar.gz", APP_USER: 'vertx', PASS_WORD: 'tecfox#007'])
//    labels(['version': "${project.version}"])
    //load
//}

//docker.dependsOn assemble