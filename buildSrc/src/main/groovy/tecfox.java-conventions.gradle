/**
 * Custom Java conventions for Gradle builds. Note: gradlePluginPortal() repository must be given in root buildscript of the project!
 * 
 * Copyright TecFox GmbH, 2022.
 */
plugins {
	id 'java-library'
	id 'checkstyle'
	id 'eclipse'
	id 'idea'
}

group = 'eu.tecfox.java'
version = '1.0'

// Question: is it desirable to have a global JDK version, or should profiles define one for themselves?
def jdkVersion = !hasProperty('javaVersion') ? 1.8 : javaVersion
// Answer: Profiles should define Java level for themselves, so plugin is not overriden in this place..

// common dependencies
dependencies {
	// any?
}

ext {
	genJavaDir = "${projectDir}/src/generated/java"
}

sourceSets {
    generated {
        java.srcDir genJavaDir
    }
}

tasks.withType(JavaCompile) {
	source += sourceSets.generated.java
    configure(options) {
        forkOptions.jvmArgs = ['-Xmx1024m']
        warnings = true
    }
    destinationDir = file("${projectDir}/src/generated/java")
}

clean {
	doLast {
		def tree = fileTree(genJavaDir)
		tree.include '**'
		tree.each { it.delete() }
	}
}

checkstyle {
    toolVersion '7.8.1'
    configFile rootProject.file("config/checkstyle/checkstyle.xml")
    configProperties = [
            'checkstyle.cache.file': "${buildDir}/checkstyle.cache",
    ]
    ignoreFailures = true
    showViolations = true
}

checkstyleMain {
    source = 'src/main/java'
}

checkstyleTest {
    source ='src/test/java'
}