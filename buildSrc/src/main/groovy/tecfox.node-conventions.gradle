/**
 * Custom Node conventions for Gradle builds. Note: gradlePluginPortal() repository must be given in root buildscript of the project!
 
 * Copyright TecFox GmbH, 2022.
 */
plugins {
	id 'java'
	id 'idea'
	id 'eclipse'
	id 'eclipse-wtp'
	id 'com.github.node-gradle.node'
}

group = 'eu.tecfox.web'
version = '1.0'

def webContextPath = "${project.projectDir}/webapp"

ext {
	//NODE_PATH = "${project.projectDir}\\node_modules"
}

//eclipse.wtp.facet.file.withXml { provider ->
//    provider.asNode().fixed.find { it.@facet == 'jst.java' }.@facet = 'jst2.java'
//}

eclipse {
	wtp {
		component {
			contextPath = webContextPath
			sourceDirs += file("$webContextPath/src")
		}
	}
}

// IDEA config left for IntelliJ enthusiasts..

node {
	version = '16.14.2' // https://nodejs.org/en/
	yarnVersion = '1.22.18' // https://yarnpkg.com/en/
	download = true
	// Note: Node, NPM and Yarn are installed in rootDir - must be dynamic when not sub-module!
	// E.g. project.rootDir == null ? "NULL" : "Sub-Project!"
	workDir = file("${project.rootDir}/.gradle/nodejs")
	npmWorkDir = file("${project.rootDir}/.gradle/npm")
	yarnWorkDir = file("${project.rootDir}/.gradle/yarn")
	nodeProjectDir = file(webContextPath)
}

tasks.withType(NpmTask) {
	// configure NpmTask
}

tasks.withType(NpxTask) {
	// configure NpxTask
	inputs.dir("${project.projectDir}/webapp/node_modules")
}

tasks.withType(NodeTask) {
	// configure NodeTask
}

tasks.withType(YarnTask) {
	// configure YarnTask
	//args = ["--modules-folder","${project.rootDir}/node_modules","--prefix","${project.rootDir}/node_modules"]
}

yarn_cache_clean {
  args = ['--no-emoji', '--json']
}
